# .github/workflows/build-and-release.yml

name: Build and Release Executable

# --- Trigger ---
# This workflow runs automatically when you push a new tag
# that starts with 'v' (e.g., v1.0, v1.0.1, v1.2.3)
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    # --- Runner ---
    # We will build on the latest version of Windows
    runs-on: windows-latest

    steps:
      # --- 1. Checkout Code ---
      # This step checks out a copy of your repository onto the runner.
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 2. Set up Python ---
      # This step installs a specific version of Python.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # You can change this to your desired Python version

      # --- 3. Install Dependencies ---
      # This step installs PyInstaller and the packages from your requirements.txt file.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # --- 4. Build the Executable ---
      # This is the core build step using PyInstaller.
      # --name: Sets the output file name.
      # --onefile: Creates a single .exe file.
      # --windowed: Prevents a console window from appearing when the GUI runs.
      # --icon: Specifies your application icon.
      - name: Build executable with PyInstaller
        run: |
          pyinstaller `
            --name "Code Extractor Pro" `
            --onefile `
            --windowed `
            --icon "codeextractor.ico" `
            main.py

      # --- 5. Package for Release ---
      # This step zips the final executable for easier distribution.
      # The release will contain 'Code-Extractor-Pro-windows.zip'.
      - name: Package executable
        run: |
          Compress-Archive -Path "dist/Code Extractor Pro.exe" -DestinationPath "Code-Extractor-Pro-windows.zip"

      # --- 6. Create GitHub Release ---
      # This step creates the release and uploads the zipped executable as an asset.
      # It uses the tag name for the release title.
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: Code-Extractor-Pro-windows.zip
          name: "Release ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: "Official release of Code Extractor Pro, version ${{ github.ref_name }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
